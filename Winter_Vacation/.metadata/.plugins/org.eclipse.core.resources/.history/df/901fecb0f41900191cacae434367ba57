package emirim.handler;

import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;

import javax.swing.JLabel;

import emirim.constant.KakaoConstant;
import emirim.view.KakaoView;

public class KakaoHandler extends KeyAdapter {
	private JLabel lbl;
	private KakaoView view;
	private int[] obstacleX, obstacleY, treasureX, treasureY;
	private int[] obstartX, obendX, obstartY, obendY;
	private int[] trstartX, trendX, trstartY, trendY;
	private JLabel lblScore;
	private boolean prev_status_hit = false;
	
	public KakaoHandler(KakaoView view) {
		super();
		this.view = view;
		this.lbl = view.getLbl();				//캐릭터 라벨
		this.lblScore = view.getLblScore();		//점수 라벨
		this.obstacleX = view.getObstacleX();	//장애물 X 좌표들 저장된 배열
		this.obstacleY = view.getObstacleY();	//장애물 Y 좌표들 저장된 배열
		this.treasureX = view.getTreasureX();	//보물 X 좌표들 저장된 배열
		this.treasureY = view.getTreasureY();	//보물 Y 좌표들 저장된 배열
		this.obstartX = new int[obstacleX.length];
		this.obendX = new int[obstacleX.length];
		this.obstartY = new int[obstacleX.length];
		this.obendY = new int[obstacleX.length];
		for (int i = 0; i < obendX.length; i++) {
			obstartX[i] = obstacleX[i] - KakaoConstant.RB_JLABEL_WIDTH;
			obendX[i] = obstacleX[i] + KakaoConstant.OT_JLABEL_WIDTH;
			obstartY[i] = obstacleY[i] - KakaoConstant.RB_JLABEL_HEIGHT;
			obendY[i] = obstacleY[i] + KakaoConstant.OT_JLABEL_HEIGHT;
		}
	}



	@Override
	public void keyPressed(KeyEvent e) {
		
	}
}
